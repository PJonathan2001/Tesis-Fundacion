name: CI/CD para Frontend con Seguridad

on:
  push:
    branches:
      - main  # Se ejecuta en cada push a la rama principal
  pull_request:
    branches:
      - main

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true  # No falla el pipeline si encuentra credenciales

  testCalidadUnitaria:
    runs-on: ubuntu-latest
    needs: gitleaks  # Se ejecuta después de gitleaks
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3
      
      - name: Instalar dependencias
        run: |
          echo "Instalando dependencias de Next.js..."
          sleep 10  # Simulación
          echo "Instalación completada."

      - name: Ejecutar pruebas unitarias (Simulado)
        run: |
          echo "Ejecutando pruebas unitarias..."
          sleep 30  # Simulación
          echo "Todas las pruebas pasaron exitosamente."

  SonarCloud:
    runs-on: ubuntu-latest
    needs: testCalidadUnitaria
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar SonarCloud
        run: |
          echo "Configurando SonarCloud..."

      - name: Analizar código con SonarCloud
        run: |
          sonar-scanner \
            -Dsonar.PJonathan2001-Tesis-Fundacion\
            -Dsonar.projectKey=Implementacion-DevSecOps \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  escaneoSeguridad:
    runs-on: ubuntu-latest
    needs: SonarCloud
    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar pnpm
        run: npm install -g pnpm

      - name: Instalar dependencias con pnpm
        run: pnpm install

      - name: Iniciar servidor local de Next.js
        run: |
          pnpm run dev &  # Ejecutar en segundo plano
          npx wait-on http://localhost:3000  # Esperar hasta que el servidor esté listo

      - name: Ejecutar escaneo de seguridad con OWASP ZAP
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://localhost:3000"
          fail_on_warn: false  # Cambiar a true si quieres que falle en advertencias

      - name: Subir reporte de OWASP ZAP
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: escaneoSeguridad
    steps:
      - name: Simular despliegue en Vercel
        run: |
          echo "Desplegando en Vercel..."
          sleep 33  # Simulación
          echo "Despliegue exitoso."
